name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  IMAGE_NAME: sedjro/urlscraper
  IMAGE_VERSION: 0.1
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 


jobs:
  build-push:
    runs-on: ubuntu-latest
    container:
      image: docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker login
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }}|docker login -u  ${{ secrets.DOCKER_HUB_USER }} --password-stdin    
      
      - name: Docker build
        run: docker buildx build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }} -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }} --no-cache -f Dockerfile . 
      
      - name: Scan image
        run: docker run aquasec/trivy image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }} 
      
      - name: Docker push
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }} 
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.BRANCH_NAME }}

  url-sanitizer:
    runs-on: ubuntu-latest   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Sanitize urls
        run: cd scripts && ./domainSanitizer.sh

  deploy:
    needs: [build-push]
    runs-on: ubuntu-latest
    container:
      image: bitnami/kubectl
    env:
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
    steps:
      - name: Create dir
        run: ls ~/ && mkdir ~/.kube/
      - name: Set KubeconfigFile
        run: |
          cat << EOF > ~/.kube/config
          ${{ secrets.KUBE_CONFIG }}
          EOF
      - name: test
        run: echo "kubectl version"
      - name: Deploy
        run: echo "kubectl apply -f kubernetes/deployment.yaml"

